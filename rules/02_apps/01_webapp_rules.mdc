# Web Application Rules

## Architecture Guidelines
- Use modern web frameworks (React, Vue, Angular)
- Implement responsive design principles
- Follow RESTful API design patterns
- Use component-based architecture

## Frontend Development
- Use TypeScript for type safety
- Implement proper state management
- Use CSS-in-JS or modern CSS frameworks
- Optimize for performance and accessibility

## Backend Development
- Use Node.js, Python, or other modern runtimes
- Implement proper API versioning
- Use database ORMs for data access
- Implement proper error handling and logging

## Testing Strategy
- Unit tests for business logic
- Integration tests for API endpoints
- End-to-end tests for user workflows
- Visual regression testing for UI components

## Deployment
- Use containerization (Docker)
- Implement CI/CD pipelines
- Use environment-specific configurations
- Monitor application performance and errors

## Security
- Implement proper authentication and authorization
- Use HTTPS in production
- Validate and sanitize all inputs
- Implement proper CORS policies

## Performance
- Optimize bundle sizes
- Implement lazy loading
- Use CDN for static assets
- Monitor and optimize database queries