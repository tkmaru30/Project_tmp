---
description: "Cursorルール設定ファイルの全体構成と使用方法の説明"
globs: "**/*"
alwaysApply: true
---

# Cursor ルール設定ファイル一覧

このワークスペースのCursorルール設定は、管理しやすさを考慮して階層構造で種別ごとに分類されています。

## 階層構造

```
.cursor/rules/
├── 00_core/                       # 全体に適用される基本ルール
│   ├── 00_README.mdc              # この構成説明ファイル
│   ├── 01_basic_settings.mdc      # 基本設定・日本語対応
│   ├── 02_project_structure.mdc   # プロジェクト構造・命名規約
│   ├── 03_coding_rules.mdc        # コーディング規約・言語別ルール
│   ├── 04_security_rules.mdc      # セキュリティルール・機密情報管理
│   ├── 05_templates.mdc           # README・文書・設定ファイルのテンプレート
│   └── 06_slack_integration.mdc   # Slack連携ルール・対応手順
├── 01_docs/                       # 文書管理関連ルール
│   └── 01_document_rules.mdc      # 文書分類・格納場所・作成ルール
└── 02_apps/                       # Webアプリケーション関連ルール
    └── 01_webapp_rules.mdc        # Webアプリ作成ルール・技術スタック
```

## カテゴリ別説明

### 00_core/ - 基本ルール
全てのプロジェクトに適用される基本的なルールを格納。
- 基本設定（日本語対応、AI動作指針）
- プロジェクト構造（フォルダ構成、命名規約）
- コーディング規約（言語別規約、ファイル構成）
- セキュリティルール（機密情報管理、セキュリティ対策）
- テンプレート集（README、設定ファイルなど）
- 外部サービス連携（Slackなど）

### 01_docs/ - 文書管理
文書作成・管理に関するルールを格納。
- 文書分類と格納場所
- 文書作成ルールとメタデータ
- 文書管理のベストプラクティス

### 02_apps/ - アプリケーション関連
Webアプリケーション開発に特化したルールを格納。
- Webアプリ作成手順と技術スタック
- UI/UXデザイン仕様
- 必須ファイル構成とテンプレート


## 使用方法

1. **新しいプロジェクトを開始する場合**
   - `00_core/02_project_structure.mdc` でフォルダ構成を確認
   - `02_apps/01_webapp_rules.mdc` または `01_docs/01_document_rules.mdc` で作成ルールを確認
   - `00_core/05_templates.mdc` から適切なテンプレートを使用

2. **コーディング時**
   - `00_core/03_coding_rules.mdc` でコーディング規約を確認
   - `00_core/04_security_rules.mdc` でセキュリティ要件を確認

3. **Slackから指示を受けた場合**
   - `00_core/06_slack_integration.mdc` の対応手順に従って実行

4. **カテゴリ別アクセス**
   - **基本設定の確認**: `00_core/` フォルダ内のファイルを参照
   - **文書作成**: `01_docs/` フォルダ内のファイルを参照
   - **アプリ開発**: `02_apps/` フォルダ内のファイルを参照

## ルールの更新

ルールを更新する場合は、該当するカテゴリフォルダ内のファイルを編集してください。
全体に影響する変更の場合は、関連する複数のファイルを同時に更新することを推奨します。

### 新しいルールの追加
- **基本ルール**: `00_core/` フォルダに追加
- **文書関連**: `01_docs/` フォルダに追加
- **アプリ関連**: `02_apps/` フォルダに追加

## 階層構造のメリット

1. **管理しやすさ**: 関連するルールが同じフォルダにまとまっている
2. **検索性**: カテゴリが明確で必要なルールを素早く見つけられる
3. **拡張性**: 新しいカテゴリを追加しやすい構造
4. **保守性**: 影響範囲が明確で更新時の影響を把握しやすい

## 注意事項

- 各ルールファイルは相互に関連しているため、変更時は他のファイルへの影響も考慮してください
- 新しいルールを追加する場合は、適切なカテゴリフォルダに配置してください
- 既存のルールと矛盾しないよう注意してください
- フォルダ間でルールが重複しないよう、明確な責任分界を保ってください