---
description: "セキュリティ対策と機密情報管理のベストプラクティス"
globs: "**/*.{js,jsx,ts,tsx,json,env,gitignore}"
alwaysApply: true
---

# セキュリティとベストプラクティス

## 機密情報管理
- APIキーやパスワードはコードに直接記述しない
- 機密情報は環境変数で管理（.envファイル使用）
- .envファイルは必ず.gitignoreに追加
- 本番環境では環境変数をプラットフォーム設定で管理

## 認証・認可
- JWTトークンの適切な管理
- パスワードのハッシュ化（bcryptを使用）
- セッション管理の実装
- CORS設定の適切な構成

## データベースセキュリティ
- SQLインジェクション対策（パラメータ化クエリ使用）
- データベース接続情報の暗号化
- 適切なユーザー権限設定
- 定期的なバックアップ実施

## フロントエンドセキュリティ
- XSS攻撃対策（入力値のサニタイズ）
- CSRF攻撃対策
- セキュリティヘッダーの設定
- HTTPSの使用強制

## .gitignore テンプレート

```gitignore
# 環境変数
.env
.env.local
.env.production
.env.staging

# 依存関係
node_modules/
npm-debug.log*
yarn-debug.log*
yarn-error.log*

# ビルド成果物
dist/
build/
.next/

# IDEファイル
.vscode/
.idea/
*.swp
*.swo

# OS生成ファイル
.DS_Store
Thumbs.db

# ログファイル
*.log
logs/

# 一時ファイル
tmp/
temp/
```

## セキュリティチェックリスト
- [ ] 機密情報が環境変数で管理されている
- [ ] .envファイルが.gitignoreに含まれている
- [ ] パスワードがハッシュ化されている
- [ ] 入力値のバリデーションが実装されている
- [ ] HTTPSが使用されている
- [ ] セキュリティヘッダーが設定されている
- [ ] 定期的なセキュリティアップデートが実施されている